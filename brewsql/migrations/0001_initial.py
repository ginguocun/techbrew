# Generated by Django 2.2 on 2019-06-11 14:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brew_batch_code', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='酿造批次')),
                ('date_start', models.DateField(null=True, verbose_name='开始日期')),
                ('theory_days', models.IntegerField(blank=True, default=25, null=True, verbose_name='理论天数')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('is_share', models.BooleanField(default=True, verbose_name='可访问')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brew_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brew_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '酿造批次',
                'verbose_name_plural': '酿造批次',
                'ordering': ['-id'],
                'permissions': (('can_export_brew_data', '可以导出酿造记录'),),
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='姓名')),
                ('gender', models.CharField(blank=True, choices=[('0', '未知'), ('1', '男'), ('2', '女')], max_length=10, null=True, verbose_name='性别')),
                ('mobile', models.CharField(blank=True, max_length=100, null=True, verbose_name='手机')),
                ('wechat', models.CharField(blank=True, max_length=100, null=True, verbose_name='微信')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='邮箱')),
                ('desc', models.TextField(blank=True, max_length=1000, null=True, verbose_name='介绍')),
                ('is_active', models.BooleanField(default=True, verbose_name='有效客户')),
                ('openid', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('avatar', models.URLField(blank=True, null=True, verbose_name='头像')),
                ('nickname', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='昵称')),
                ('language', models.CharField(blank=True, max_length=100, null=True, verbose_name='语言')),
                ('city', models.CharField(blank=True, max_length=200, null=True, verbose_name='城市')),
                ('province', models.CharField(blank=True, max_length=200, null=True, verbose_name='省份')),
                ('country', models.CharField(blank=True, max_length=200, null=True, verbose_name='国家')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('current_address_id', models.IntegerField(blank=True, null=True, verbose_name='当前地址id')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '客户',
                'verbose_name_plural': '客户',
                'ordering': ['id'],
                'permissions': (('view_all_clients', '可以查看所有客户'),),
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name_en', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='公司英文名')),
                ('company_name_cn', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='公司中文名')),
                ('company_address', models.CharField(blank=True, max_length=200, null=True, verbose_name='公司地址')),
                ('china_district', models.CharField(blank=True, max_length=100, null=True, verbose_name='地区编号')),
                ('company_tel', models.CharField(blank=True, max_length=100, null=True, verbose_name='公司电话')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='公司邮箱')),
                ('tax_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='税号')),
                ('bank', models.CharField(blank=True, max_length=200, null=True, verbose_name='银行')),
                ('bank_account', models.CharField(blank=True, max_length=50, null=True, verbose_name='银行卡号')),
                ('desc', models.TextField(blank=True, max_length=1000, null=True, verbose_name='公司介绍')),
                ('company_share', models.BooleanField(default=False, verbose_name='是否共享')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '公司',
                'verbose_name_plural': '公司',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='名字')),
                ('last_name', models.CharField(max_length=50, verbose_name='姓氏')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='邮箱')),
                ('birth', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('mobile', models.CharField(max_length=100, null=True, verbose_name='电话')),
                ('wechat', models.CharField(blank=True, max_length=100, null=True, verbose_name='微信')),
                ('desc', models.TextField(blank=True, max_length=1000, null=True, verbose_name='介绍')),
                ('gender', models.CharField(blank=True, choices=[('0', '未知'), ('1', '男'), ('2', '女')], max_length=10, null=True, verbose_name='性别')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='头衔')),
                ('department', models.CharField(blank=True, max_length=100, null=True, verbose_name='部门')),
                ('is_brewer', models.BooleanField(default=False, verbose_name='是酿酒师')),
                ('is_salesman', models.BooleanField(default=False, verbose_name='是销售员')),
                ('working', models.BooleanField(default=True, verbose_name='在职')),
                ('joined', models.DateField(blank=True, null=True, verbose_name='加入日期')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '员工',
                'verbose_name_plural': '员工',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_code', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='原料编号')),
                ('material_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='原料英文名')),
                ('material_cn', models.CharField(max_length=200, null=True, unique=True, verbose_name='原料中文名')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('account_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='财务编号')),
                ('shared_material', models.IntegerField(blank=True, null=True, verbose_name='导入于')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '原料',
                'verbose_name_plural': '原料',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='MaterialBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_batch_code', models.CharField(max_length=100, null=True, unique=True, verbose_name='批号')),
                ('expire_date', models.DateField(null=True, verbose_name='保质期')),
                ('para', models.CharField(blank=True, max_length=100, null=True, verbose_name='参数')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('qc_report', models.FileField(blank=True, null=True, upload_to='material/qc', verbose_name='质检报告')),
                ('state', models.BooleanField(default=True, verbose_name='状态')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_batch_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_batch', to='brewsql.Material', verbose_name='原料')),
            ],
            options={
                'verbose_name': '原料批次',
                'verbose_name_plural': '原料批次',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='MoneyInOut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money_in_out', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='金额')),
                ('money_in_out_date', models.DateField(null=True, verbose_name='日期')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='确认到账')),
                ('is_active', models.BooleanField(default=True, verbose_name='记录有效')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='money_io_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='确认人员')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='money_io_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='money_io_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '资金流水',
                'verbose_name_plural': '资金流水',
                'ordering': ['-id'],
                'permissions': (('confirm_moneyinout', '可以确认资金到账'),),
            },
        ),
        migrations.CreateModel(
            name='OrderState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_state_cn', models.CharField(blank=True, max_length=40, null=True, unique=True, verbose_name='订单状态中文')),
                ('order_state_en', models.CharField(blank=True, max_length=40, null=True, verbose_name='订单状态英文')),
                ('order_state_desc_cn', models.TextField(blank=True, max_length=1000, null=True, verbose_name='订单状态中文介绍')),
                ('order_state_desc_en', models.TextField(blank=True, max_length=1000, null=True, verbose_name='订单状态英文介绍')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_state_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_state_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '订单状态',
                'verbose_name_plural': '订单状态',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Pack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pack_batch_code', models.CharField(max_length=30, null=True, unique=True, verbose_name='灌装批次')),
                ('pack_date', models.DateField(null=True, verbose_name='灌装日期')),
                ('pack_start', models.TimeField(blank=True, null=True, verbose_name='灌装开始')),
                ('pack_end', models.TimeField(blank=True, null=True, verbose_name='灌装结束')),
                ('pack_num', models.PositiveIntegerField(null=True, verbose_name='数量')),
                ('state', models.BooleanField(default=True, verbose_name='状态')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('confirmed', models.BooleanField(default=False, verbose_name='是否确认')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('brew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packs', to='brewsql.Brew', verbose_name='酿造批次')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pack_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Employee', verbose_name='操作员')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pack_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '产品入库',
                'verbose_name_plural': '产品入库',
                'ordering': ['pk'],
                'permissions': (('can_export_pack_data', '可以导出入库记录'),),
            },
        ),
        migrations.CreateModel(
            name='ProductName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name_code', models.CharField(max_length=30, null=True, unique=True, verbose_name='名称编号')),
                ('product_name_cn', models.CharField(max_length=200, null=True, unique=True, verbose_name='产品中文名')),
                ('product_name_cn_pre', models.CharField(blank=True, max_length=200, null=True, verbose_name='产品中文名-曾用名')),
                ('product_name_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='产品英文名')),
                ('product_name_en_pre', models.CharField(blank=True, max_length=200, null=True, verbose_name='产品英文名-曾用名')),
                ('current_recipe', models.IntegerField(blank=True, null=True, verbose_name='当前配方编号')),
                ('desc_en', models.TextField(blank=True, max_length=4000, null=True, verbose_name='英文介绍')),
                ('desc_cn', models.TextField(blank=True, max_length=4000, null=True, verbose_name='中文介绍')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('is_show', models.BooleanField(default=True, verbose_name='是否显示')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('brewer', models.ForeignKey(limit_choices_to={'is_brewer': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Employee', verbose_name='酿酒师')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Client', verbose_name='关联客户')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_name_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_name_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '产品名称',
                'verbose_name_plural': '产品名称',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Tank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tank_code', models.CharField(max_length=30, null=True, unique=True, verbose_name='发酵罐编号')),
                ('tank_name', models.CharField(max_length=100, null=True, verbose_name='发酵罐名')),
                ('tank_standard_volume', models.CharField(max_length=100, null=True, verbose_name='发酵罐容量')),
                ('volume_init', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='起始容量')),
                ('volume_left', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='剩余容量')),
                ('jkm_t_real', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('jkm_t_set', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('jkm_updated', models.DateTimeField(blank=True, null=True, verbose_name='温度更新于')),
                ('tank_info_updated', models.DateTimeField(auto_now=True, verbose_name='更新于')),
                ('current_brew_code', models.CharField(blank=True, max_length=30, null=True, verbose_name='当前批次')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tank_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tank_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '发酵罐',
                'verbose_name_plural': '发酵罐',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_code', models.CharField(max_length=10, null=True, unique=True, verbose_name='位置编号')),
                ('place_desc', models.CharField(max_length=200, null=True, unique=True, verbose_name='位置描述')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='warehouse_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='warehouse_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '存储位置',
                'verbose_name_plural': '存储位置',
            },
        ),
        migrations.CreateModel(
            name='TankState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tank_state_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='发酵罐状态英文')),
                ('tank_state_cn', models.CharField(max_length=200, null=True, verbose_name='发酵罐状态中文')),
                ('with_product', models.BooleanField(default=True, verbose_name='是否生产')),
                ('can_start', models.BooleanField(default=False, verbose_name='可以入罐')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tank_state_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tank_state_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '发酵罐状态',
                'verbose_name_plural': '发酵罐状态',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TankSateUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tank_state_updated', models.DateTimeField(auto_now_add=True, verbose_name='更改时间')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tank_state_update_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tank_state_update_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('tank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Tank', verbose_name='设备编号')),
                ('tank_state_now', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tank_state_now', to='brewsql.TankState', verbose_name='状态更改为')),
                ('tank_state_pre', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tank_state_pre', to='brewsql.TankState', verbose_name='更改前状态')),
            ],
            options={
                'verbose_name': '发酵罐状态更新',
                'verbose_name_plural': '发酵罐状态更新',
            },
        ),
        migrations.AddField(
            model_name='tank',
            name='tank_state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.TankState', verbose_name='发酵罐状态'),
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='姓名')),
                ('gender', models.CharField(blank=True, choices=[('0', '未知'), ('1', '男'), ('2', '女')], max_length=10, null=True, verbose_name='性别')),
                ('mobile', models.CharField(blank=True, max_length=100, null=True, verbose_name='手机')),
                ('wechat', models.CharField(blank=True, max_length=100, null=True, verbose_name='微信')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='邮箱')),
                ('desc', models.TextField(blank=True, max_length=1000, null=True, verbose_name='介绍')),
                ('is_active', models.BooleanField(default=True, verbose_name='交往中')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='supplier_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='supplier_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('supplier_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Company', verbose_name='所属公司')),
            ],
            options={
                'verbose_name': '供应商',
                'verbose_name_plural': '供应商',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SaleOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_order_code', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='订单编号')),
                ('sale_order_date', models.DateField(blank=True, null=True, verbose_name='订单日期')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否有效')),
                ('is_delivered', models.BooleanField(default=False, verbose_name='已发货')),
                ('fee_received', models.BooleanField(default=False, verbose_name='款结清')),
                ('is_from_wx', models.BooleanField(default=False, verbose_name='来自微信')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Client', verbose_name='购买客户')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_order_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('employee', models.ForeignKey(limit_choices_to={'is_salesman': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Employee', verbose_name='销售员')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_order_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('order_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.OrderState', verbose_name='订单状态')),
            ],
            options={
                'verbose_name': '销售订单',
                'verbose_name_plural': '销售订单',
                'ordering': ['-id'],
                'permissions': (('view_all_sale_orders', '可以查看所有订单'),),
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_date', models.DateField(blank=True, null=True, verbose_name='出库日期')),
                ('sale_num', models.PositiveIntegerField(null=True, verbose_name='订单数量')),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='出售价')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('is_sale', models.BooleanField(default=True, verbose_name='正常出售')),
                ('is_active', models.BooleanField(default=True, verbose_name='订单有效')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='已出库')),
                ('fee_received', models.BooleanField(default=False, verbose_name='已收款')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='brewsql.Pack', verbose_name='灌装批次')),
                ('sale_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_order_sales', to='brewsql.SaleOrder', verbose_name='销售订单')),
                ('sale_price_link', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='brewsql.MoneyInOut', verbose_name='出售价格')),
            ],
            options={
                'verbose_name': '产品出库',
                'verbose_name_plural': '产品出库',
                'ordering': ['-pk'],
                'permissions': (('confirm_sale', '可以确认出库'), ('confirm_fee_receive', '可以确认收款'), ('can_export_sale_data', '可以导出出库记录')),
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_code', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='报告编号')),
                ('report_date', models.DateField(null=True, verbose_name='报告日期')),
                ('ebc', models.PositiveIntegerField(blank=True, null=True, verbose_name='色度')),
                ('turbidity', models.PositiveIntegerField(blank=True, null=True, verbose_name='浊度')),
                ('foam', models.PositiveIntegerField(blank=True, null=True, verbose_name='泡持性')),
                ('abv', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='酒精度')),
                ('plato', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='原麦汁度')),
                ('total_acid', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True, verbose_name='总酸')),
                ('co2', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='二氧化碳')),
                ('diacetyl', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='双乙酰')),
                ('enzyme', models.BooleanField(default=True, verbose_name='蔗糖转化酶')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('is_active', models.BooleanField(default=True, verbose_name='有效')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='是否确认')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='report_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Employee', verbose_name='检验人员')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='report_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='brewsql.Pack', verbose_name='灌装批次')),
            ],
            options={
                'verbose_name': '产品检验报告',
                'verbose_name_plural': '产品检验报告',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_code', models.CharField(max_length=50, null=True, unique=True, verbose_name='配方编号')),
                ('recipe_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='配方名称')),
                ('materials', models.TextField(max_length=1000, null=True, verbose_name='原材料')),
                ('mashing', models.TextField(max_length=1000, null=True, verbose_name='糖化工艺')),
                ('fermentation', models.TextField(max_length=1000, null=True, verbose_name='发酵工艺')),
                ('yeast', models.CharField(blank=True, max_length=50, null=True, verbose_name='酵母')),
                ('og', models.DecimalField(decimal_places=3, max_digits=4, null=True, verbose_name='原麦汁度')),
                ('abv', models.DecimalField(decimal_places=2, max_digits=4, null=True, verbose_name='酒精度')),
                ('ibu', models.DecimalField(decimal_places=1, max_digits=4, null=True, verbose_name='苦度')),
                ('notes', models.TextField(max_length=1000, null=True, verbose_name='备注')),
                ('style', models.CharField(blank=True, max_length=50, null=True, verbose_name='风格')),
                ('current_use', models.BooleanField(default=True, verbose_name='正在使用')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('brewer', models.ForeignKey(limit_choices_to={'is_brewer': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Employee', verbose_name='酿酒师')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipe_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipe_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('recipe_product_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.ProductName', verbose_name='产品名称')),
                ('related_recipes', models.ManyToManyField(related_name='_recipe_related_recipes_+', to='brewsql.Recipe', verbose_name='关联配方')),
            ],
            options={
                'verbose_name': '配方',
                'verbose_name_plural': '配方',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type_code', models.CharField(max_length=10, unique=True, verbose_name='类型编号')),
                ('product_type_name_cn', models.CharField(max_length=100, unique=True, verbose_name='类型中文名')),
                ('product_type_name_en', models.CharField(max_length=100, unique=True, verbose_name='类型英文名')),
                ('is_show', models.BooleanField(default=False, verbose_name='类型显示')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_type_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_type_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '产品类型',
                'verbose_name_plural': '产品类型',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProductStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_style_cn', models.CharField(max_length=200, null=True, verbose_name='中文名称')),
                ('product_style_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='英文名称')),
                ('product_style_desc_cn', models.TextField(blank=True, max_length=2000, null=True, verbose_name='中文描述')),
                ('product_style_desc_en', models.TextField(blank=True, max_length=2000, null=True, verbose_name='英文描述')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_style_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_style_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '产品风格',
                'verbose_name_plural': '产品风格',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProductPackSizeUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_pack_size', models.DecimalField(decimal_places=1, max_digits=6, null=True, verbose_name='包装规格')),
                ('product_pack_unit', models.CharField(choices=[('mL', 'mL'), ('L', 'L')], max_length=20, null=True, verbose_name='规格单位')),
                ('product_pack_type_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='包装类型-英文')),
                ('product_pack_type_cn', models.CharField(max_length=100, null=True, verbose_name='包装类型-中文')),
                ('product_pack_code', models.CharField(max_length=5, null=True, unique=True, verbose_name='包装编号')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_pack_size_unit_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_pack_size_unit_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '产品包装',
                'verbose_name_plural': '产品包装',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='productname',
            name='product_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.ProductType', verbose_name='产品类型'),
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_category_cn', models.CharField(max_length=200, null=True, unique=True, verbose_name='归类中文')),
                ('product_category_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='归类英文')),
                ('product_category_desc_cn', models.TextField(blank=True, max_length=2000, null=True, verbose_name='中文介绍')),
                ('product_category_desc_en', models.TextField(blank=True, max_length=2000, null=True, verbose_name='英文介绍')),
                ('is_show', models.BooleanField(default=True, verbose_name='是否显示')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_category_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_category_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '产品归类',
                'verbose_name_plural': '产品归类',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=30, null=True, unique=True, verbose_name='产品编号')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='product/logo', verbose_name='logo')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product/image', verbose_name='图片')),
                ('image_banner', models.ImageField(blank=True, null=True, upload_to='product/banner', verbose_name='Banner图片')),
                ('files', models.FileField(blank=True, null=True, upload_to='product/files', verbose_name='资料')),
                ('abv', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='酒精度')),
                ('plato', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='麦汁度')),
                ('ibu', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='苦度')),
                ('barcode', models.CharField(blank=True, max_length=200, null=True, verbose_name='条码')),
                ('index', models.IntegerField(default=99, verbose_name='排序编号')),
                ('is_show', models.BooleanField(default=True, verbose_name='是否显示')),
                ('is_banner', models.BooleanField(default=False, verbose_name='是Banner')),
                ('desc_en', models.TextField(blank=True, max_length=4000, null=True, verbose_name='英文介绍')),
                ('desc_cn', models.TextField(blank=True, max_length=4000, null=True, verbose_name='中文介绍')),
                ('supplier_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='经销商价')),
                ('bar_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='酒吧报价')),
                ('public_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='终端价格')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('product_category', models.ManyToManyField(blank=True, to='brewsql.ProductCategory', verbose_name='产品归类')),
                ('product_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.ProductName', verbose_name='产品名称')),
                ('product_pack', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.ProductPackSizeUnit', verbose_name='产品包装')),
                ('product_style', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.ProductStyle', verbose_name='产品风格')),
            ],
            options={
                'verbose_name': '产品',
                'verbose_name_plural': '产品',
                'ordering': ['index'],
            },
        ),
        migrations.AddField(
            model_name='pack',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Product', verbose_name='产品'),
        ),
        migrations.CreateModel(
            name='MoneyInOutType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money_in_out_type_cn', models.CharField(max_length=200, null=True, unique=True, verbose_name='收支类型中文')),
                ('money_in_out_type_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='收支类型英文')),
                ('is_negative', models.BooleanField(default=True, verbose_name='是否为支出')),
                ('is_auto', models.BooleanField(default=False, verbose_name='自动记录')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='money_in_out_type_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='money_in_out_type_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '收支类型',
                'verbose_name_plural': '收支类型',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='moneyinout',
            name='money_in_out_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.MoneyInOutType', verbose_name='收支类型'),
        ),
        migrations.AddField(
            model_name='moneyinout',
            name='recorded_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Employee', verbose_name='经手人'),
        ),
        migrations.CreateModel(
            name='MaterialPackSizeUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_pack_size', models.DecimalField(decimal_places=3, max_digits=9, null=True, verbose_name='包装规格')),
                ('material_pack_unit', models.CharField(choices=[('g', 'g'), ('kg', 'kg'), ('mL', 'mL'), ('L', 'L')], max_length=100, null=True, verbose_name='包装单位')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_psu_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_psu_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '原料包装',
                'verbose_name_plural': '原料包装',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='MaterialOut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_out_date', models.DateField(null=True, verbose_name='日期')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='数量')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('confirmed', models.BooleanField(default=False, verbose_name='已确认')),
                ('checked', models.BooleanField(default=False, verbose_name='已检查')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('brew', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Brew', verbose_name='酿造批次')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_out_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('material_batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='brewsql.MaterialBatch', verbose_name='原料批次')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_out_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('recorder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Employee', verbose_name='记录人')),
            ],
            options={
                'verbose_name': '原料出库',
                'verbose_name_plural': '原料出库',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='MaterialIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_in_date', models.DateField(null=True, verbose_name='日期')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=10, null=True, verbose_name='数量')),
                ('material_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='采购价')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('is_confirmed', models.BooleanField(default=True, verbose_name='已确认')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_in_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('material_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewsql.MaterialBatch', verbose_name='原料批次')),
                ('material_cost_link', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='brewsql.MoneyInOut', verbose_name='流水链接')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_in_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('recorder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Employee', verbose_name='记录人员')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Supplier', verbose_name='供应商')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Warehouse', verbose_name='存储位置')),
            ],
            options={
                'verbose_name': '原料入库',
                'verbose_name_plural': '原料入库',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='MaterialCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_category_code', models.CharField(max_length=10, null=True, unique=True, verbose_name='原料分类编号')),
                ('material_category_en', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='原料分类英文名')),
                ('material_category_cn', models.CharField(max_length=100, null=True, unique=True, verbose_name='原料分类中文名')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_category_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_category_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '原料分类',
                'verbose_name_plural': '原料分类',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='materialbatch',
            name='material_pack_size_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.MaterialPackSizeUnit', verbose_name='包装规格'),
        ),
        migrations.AddField(
            model_name='materialbatch',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_batch_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者'),
        ),
        migrations.AddField(
            model_name='material',
            name='material_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.MaterialCategory', verbose_name='原料分类'),
        ),
        migrations.AddField(
            model_name='material',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者'),
        ),
        migrations.CreateModel(
            name='HandBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.IntegerField(null=True, verbose_name='编号')),
                ('chapter_code', models.CharField(max_length=30, null=True, verbose_name='章节标签')),
                ('chapter_name_cn', models.CharField(max_length=200, null=True, verbose_name='章节中文名')),
                ('chapter_content_cn', models.TextField(blank=True, max_length=10000, null=True, verbose_name='中文内容')),
                ('chapter_name_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='章节英文名')),
                ('chapter_content_en', models.TextField(blank=True, max_length=10000, null=True, verbose_name='英文内容')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hand_book_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hand_book_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '使用说明',
                'verbose_name_plural': '使用说明',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='FermentMonitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sg_plato', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MaxValueValidator(50), django.core.validators.MinValueValidator(0)], verbose_name='糖度或比重')),
                ('sg', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True, validators=[django.core.validators.MaxValueValidator(1.2), django.core.validators.MinValueValidator(1.0)], verbose_name='比重')),
                ('plato', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MaxValueValidator(43), django.core.validators.MinValueValidator(0)], verbose_name='糖度')),
                ('ph', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MaxValueValidator(8), django.core.validators.MinValueValidator(1)], verbose_name='pH')),
                ('t_real', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MaxValueValidator(35), django.core.validators.MinValueValidator(-5)], verbose_name='真实温度')),
                ('t_set', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MaxValueValidator(35), django.core.validators.MinValueValidator(-5)], verbose_name='设置温度')),
                ('bar', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(0)], verbose_name='压力(Bar)')),
                ('diacetyl', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(0)], verbose_name='双乙酰(mg/L)')),
                ('qc_report', models.FileField(blank=True, null=True, upload_to='process/qc', verbose_name='质检报告')),
                ('dry_hop', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='酒花干投量')),
                ('slag', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='排渣量')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('cell_mml', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='酵母数')),
                ('recorded', models.DateTimeField(null=True, verbose_name='记录于')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('brew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewsql.Brew', verbose_name='酿造批次')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ferment_monitor_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ferment_monitor_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('recorder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Employee', verbose_name='记录人员')),
            ],
            options={
                'verbose_name': '发酵监控',
                'verbose_name_plural': '发酵监控',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_state_cn', models.CharField(max_length=100, null=True, unique=True, verbose_name='员工状态-中文')),
                ('employee_state_en', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='员工状态-英文')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_state_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_state_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '员工状态',
                'verbose_name_plural': '员工状态',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='employee_state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.EmployeeState', verbose_name='员工状态'),
        ),
        migrations.AddField(
            model_name='employee',
            name='linked_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_account', to=settings.AUTH_USER_MODEL, verbose_name='关联账号'),
        ),
        migrations.AddField(
            model_name='employee',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者'),
        ),
        migrations.CreateModel(
            name='CompanyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_type_en', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='公司类型英文')),
                ('company_type_cn', models.CharField(max_length=100, null=True, unique=True, verbose_name='公司类型中文')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_type_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_type_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '公司类型',
                'verbose_name_plural': '公司类型',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='company',
            name='company_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.CompanyType', verbose_name='公司类型'),
        ),
        migrations.AddField(
            model_name='company',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='company',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者'),
        ),
        migrations.CreateModel(
            name='ClientLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_code', models.SmallIntegerField(blank=True, null=True, unique=True, verbose_name='等级编号')),
                ('level_cn', models.CharField(max_length=100, null=True, unique=True, verbose_name='中文级别')),
                ('level_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='英文级别')),
                ('level_desc_cn', models.TextField(blank=True, max_length=1000, null=True, verbose_name='中文级别描述')),
                ('level_desc_en', models.TextField(blank=True, max_length=1000, null=True, verbose_name='英文级别描述')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_level_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_level_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '客户级别',
                'verbose_name_plural': '客户级别',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ClientAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='收货人')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='邮政编码')),
                ('province_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='省份')),
                ('city_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='城市')),
                ('county_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='辖区')),
                ('detail_info', models.CharField(blank=True, max_length=200, null=True, verbose_name='街道')),
                ('national_code', models.CharField(blank=True, max_length=200, null=True, verbose_name='国家码')),
                ('tel_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='手机号')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否有效')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Client', verbose_name='客户')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_address_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_address_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '收货地址',
                'verbose_name_plural': '收货地址',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='client',
            name='client_company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Company', verbose_name='所属公司'),
        ),
        migrations.AddField(
            model_name='client',
            name='client_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.ClientLevel', verbose_name='客户级别'),
        ),
        migrations.AddField(
            model_name='client',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='client',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者'),
        ),
        migrations.CreateModel(
            name='BrewMonitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brew_monitor_code', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='糖化批次号')),
                ('brew_date', models.DateField(null=True, verbose_name='糖化日期')),
                ('batch_volume', models.PositiveIntegerField(null=True, verbose_name='批次容量')),
                ('initial_water', models.PositiveIntegerField(null=True, verbose_name='起始水量')),
                ('sparge_water', models.PositiveIntegerField(null=True, verbose_name='洗糟水量')),
                ('mash_volume', models.PositiveIntegerField(blank=True, null=True, verbose_name='糖化体积')),
                ('after_boiling_add_water', models.IntegerField(blank=True, default=0, verbose_name='煮沸后加水量')),
                ('boiling_full_volume', models.PositiveIntegerField(blank=True, null=True, verbose_name='煮沸锅满锅液位')),
                ('enter_fermenter_volume', models.PositiveIntegerField(blank=True, null=True, verbose_name='入发酵罐容量')),
                ('initial_tem', models.DecimalField(decimal_places=1, max_digits=3, null=True, verbose_name='糖化起始温度')),
                ('sparge_tem', models.DecimalField(decimal_places=1, max_digits=3, null=True, verbose_name='洗糟水温度')),
                ('boiling_full_tem', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='煮沸锅满锅温度')),
                ('enter_fermenter_tem', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='入发酵罐温度')),
                ('ph_mash_0', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='投料结束 pH')),
                ('ph_mash_1', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='糖化第一步 pH')),
                ('brix_0', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='头道麦汁 Brix')),
                ('ph_0', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='头道麦汁 pH')),
                ('brix_1', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='过滤1/2 Brix')),
                ('ph_1', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='过滤1/2 pH')),
                ('brix_2', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='末道麦汁 Brix')),
                ('ph_2', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='末道麦汁 pH')),
                ('brix_3', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='煮沸开始 Brix')),
                ('ph_3', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='煮沸开始 pH')),
                ('og_wort', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='煮沸结束 Brix')),
                ('ph_wort', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='煮沸结束 pH')),
                ('malt_add_start', models.TimeField(blank=True, null=True, verbose_name='投料开始')),
                ('malt_add_end', models.TimeField(blank=True, null=True, verbose_name='投料结束')),
                ('recycle_start', models.TimeField(blank=True, null=True, verbose_name='回流开始')),
                ('into_boiling', models.TimeField(blank=True, null=True, verbose_name='入煮沸锅')),
                ('boiling_full', models.TimeField(blank=True, null=True, verbose_name='煮沸锅满')),
                ('boiling_start', models.TimeField(blank=True, null=True, verbose_name='煮沸开始')),
                ('boiling_end', models.TimeField(blank=True, null=True, verbose_name='煮沸结束')),
                ('whirlpool_end', models.TimeField(blank=True, null=True, verbose_name='旋沉结束')),
                ('enter_fermenter_start', models.TimeField(blank=True, null=True, verbose_name='入罐开始')),
                ('enter_fermenter_end', models.TimeField(blank=True, null=True, verbose_name='入罐结束')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('brew', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='brewsql.Brew', verbose_name='酿造批次')),
                ('brewer', models.ForeignKey(limit_choices_to={'is_brewer': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Employee', verbose_name='酿酒师')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brew_monitor_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brew_monitor_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '酿造监控',
                'verbose_name_plural': '酿造监控',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='brew',
            name='operator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Employee', verbose_name='操作人员'),
        ),
        migrations.AddField(
            model_name='brew',
            name='product_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.ProductName', verbose_name='产品名称'),
        ),
        migrations.AddField(
            model_name='brew',
            name='recipe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Recipe', verbose_name='配方编号'),
        ),
        migrations.AddField(
            model_name='brew',
            name='tank',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewsql.Tank', verbose_name='设备编号'),
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank', models.CharField(blank=True, max_length=200, null=True, verbose_name='银行')),
                ('account_owner', models.CharField(blank=True, max_length=200, null=True, verbose_name='账户名')),
                ('bank_account', models.CharField(blank=True, max_length=50, null=True, verbose_name='银行卡号')),
                ('bank_address', models.CharField(blank=True, max_length=400, null=True, verbose_name='银行地址')),
                ('desc', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('is_active', models.BooleanField(default=True, verbose_name='可用')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bank_account_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bank_account_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': '收款帐号',
                'verbose_name_plural': '收款帐号',
                'ordering': ['id'],
            },
        ),
    ]
